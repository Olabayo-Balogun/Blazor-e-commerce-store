@page "/cart"
@inject ICartService CartService

<h3>Shopping Cart</h3>

@if (cartItems == null || cartItems.Count <= 0)
    {
            <span>You have no items in your shoping cart.</span>
}
else
        {
            <div>
                @foreach (var item in cartItems)
                {
                    <div class="item-container">
                        <div class="item-image-wrapper">
                            <img src="@item.Image" class="item-image"/>
                            <div class="item-name">
                                <h5>
                                    <a href="/product/@item.ProductId">@item.ProductTitle</a>
                                    <span>@item.PurchaseOptionName</span><br/>
                                    <button class="btn-delete" @onclick ="@(() => DeleteItem(item))">
                                        Delete
                                    </button>
                                </h5>
                            </div>
                            <div class="item-price">
                                ₦@item.Price
                            </div>
                        </div>
                    </div>
                }
                <div class="item-price">
                    Total (@cartItems.Count): ₦@cartItems.Sum(item => item.Price)
                </div>
            </div>
        }

@code {
    List<CartItem> cartItems = new List<CartItem>();
    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }
}
